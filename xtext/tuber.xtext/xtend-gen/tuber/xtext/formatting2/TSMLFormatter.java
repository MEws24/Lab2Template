/**
 * generated by Xtext 2.35.0
 */
package tuber.xtext.formatting2;

import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import tuber.Agent;
import tuber.Driver;
import tuber.Ride;
import tuber.Rider;
import tuber.TUber;

@SuppressWarnings("all")
public class TSMLFormatter extends AbstractFormatter2 {
  protected void _format(final TUber tUber, @Extension final IFormattableDocument document) {
    EList<Agent> _agent = tUber.getAgent();
    for (final Agent agent : _agent) {
      document.<Agent>format(agent);
    }
  }

  protected void _format(final Agent agent, @Extension final IFormattableDocument document) {
    EList<Driver> _hires = agent.getHires();
    for (final Driver driver : _hires) {
      document.<Driver>format(driver);
    }
    EList<Rider> _enrolls = agent.getEnrolls();
    for (final Rider rider : _enrolls) {
      document.<Rider>format(rider);
    }
    EList<Ride> _rides = agent.getRides();
    for (final Ride ride : _rides) {
      document.<Ride>format(ride);
    }
  }

  public void format(final Object agent, final IFormattableDocument document) {
    if (agent instanceof XtextResource) {
      _format((XtextResource)agent, document);
      return;
    } else if (agent instanceof Agent) {
      _format((Agent)agent, document);
      return;
    } else if (agent instanceof TUber) {
      _format((TUber)agent, document);
      return;
    } else if (agent instanceof EObject) {
      _format((EObject)agent, document);
      return;
    } else if (agent == null) {
      _format((Void)null, document);
      return;
    } else if (agent != null) {
      _format(agent, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(agent, document).toString());
    }
  }
}
